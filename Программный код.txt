#include <Wire.h>
#include <SparkFun_APDS9960.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>

#define OLED_ADDR   0x3C
Adafruit_SSD1306 display(-1);

#define APDS9960_INT    6 

#define BT_PAUSE 4    
#define BT_RIGHT 2    
#define BT_LEFT 3   
#define MODE 5
#define BTN_DELAY 50

SparkFun_APDS9960 apds = SparkFun_APDS9960();
int isr_flag = 1;

void setup() {
  Serial.begin(9600);
  Serial.println();
  Serial.println(F("--------------------------------"));
  Serial.println(F("SparkFun APDS-9960 - GestureTest"));
  Serial.println(F("--------------------------------"));

  attachInterrupt(0, interruptRoutine, FALLING);

  if ( apds.init() ) {
    Serial.println(F("APDS-9960 initialization complete"));
  } else {
    Serial.println(F("Something went wrong during APDS-9960 init!"));
  }

  if ( apds.enableGestureSensor(true) ) {
    Serial.println(F("Gesture sensor is now running"));
  } else {
    Serial.println(F("Something went wrong during gesture sensor init!"));
  }
  display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR);
  display.clearDisplay();
  display.display();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,0);

  display.display();
}
void loop() {
  if( isr_flag == 1 ) {
    detachInterrupt(0);
    handleGesture();
  }
  delay(150);
}
void interruptRoutine() {
  isr_flag = 1;
}

void handleGesture() {
    if ( apds.isGestureAvailable() ) {
    switch ( apds.readGesture() ) {
      case DIR_UP:
        Serial.println("UP");
        break;
      case DIR_DOWN:
        Serial.println("DOWN");
        pinMode(MODE, OUTPUT);
        delay(BTN_DELAY);
        pinMode(MODE, INPUT);
        display.clearDisplay();
        display.setCursor(0,0);
        display.print("SWITCHED MODE!");
        display.display();
        break;
      case DIR_LEFT:
        Serial.println("LEFT");
        pinMode(BT_LEFT, OUTPUT);
        delay(BTN_DELAY);
        pinMode(BT_LEFT, INPUT);
        display.clearDisplay();
        display.setCursor(0,0);
        display.print("PREV TRACK!");
        display.display();
        break;
      case DIR_RIGHT:
        Serial.println("RIGHT");
        pinMode(BT_RIGHT, OUTPUT);
        delay(BTN_DELAY);
        pinMode(BT_RIGHT, INPUT);
        display.clearDisplay();
        display.setCursor(0,0);
        display.print("NEXT TRACK!");
        display.display();
        break;
      case DIR_NEAR:
        Serial.println("NEAR");
        break;
      case DIR_FAR:
        Serial.println("FAR");
        pinMode(BT_PAUSE, OUTPUT);
        delay(BTN_DELAY);
        pinMode(BT_PAUSE, INPUT);
        display.clearDisplay();
        display.setCursor(0,0);
        display.print("PAUSE/PLAY");
        display.display();
        break;
      default:
        Serial.println("NONE");
    }
  }
}
